type Beer {
    id: ID! @unique
    name: String!
    type: String!
    strong: String
    photo: String
    avgRating: Float
    brewery: Brewery
    bars: [Bar!]
    beerRating: [BeerRating!] @relation(name: "BeerRatings" onDelete: CASCADE)
    beerComments: [BeerComment!] @relation(name: "BeerComments" onDelete: CASCADE)
    beerChanges: [BeerChange!] @relation(name: "BeerChanges" onDelete: CASCADE)
    beerPrices: [BeerPrice!] @relation(name: "BeerPrices" onDelete: CASCADE)
    barConnections: [BeerBarConnectionChange!] @relation(name: "BeerBarConnections" onDelete: CASCADE)
    createdBy: User @relation(name: "BeerCreatedRelation")
    likedBy: [User!] @relation(name: "BeerLikedRelation")
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BeerRating {
    id: ID! @unique
    rating: Int!
    user: User
    beer: Beer! @relation(name: "BeerRatings")
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BeerComment {
    id: ID! @unique
    comment: String!
    beer: Beer! @relation(name: "BeerComments")
    user: User
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BeerChange {
    id: ID! @unique
    field: BeerField!
    newValue: String!
    user: User
    beer: Beer! @relation(name: "BeerChanges")
    upvotes: [BeerChangeUpvote!] @relation(name: "BeerChangeUpvotes" onDelete: CASCADE)
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BeerChangeUpvote {
    id: ID! @unique
    user: User
    beerChange: BeerChange! @relation(name: "BeerChangeUpvotes")
    createdAt: DateTime!
}

enum BeerField {
    NAME
    TYPE
    STRONG
    PHOTO
    BREWERY
}
