type Bar {
    id: ID! @id
    name: String!
    address: String!
    # TODO limit lat long by prague
    lat: String!
    long: String!
    phone: String
    openTime: DateTime
    closeTime: DateTime
    photos: [String!] @scalarList(strategy: RELATION)
    avgRating: Float
    barRating: [BarRating!] @relation(name: "BarRatings" onDelete: CASCADE)
    barComments: [BarComment!] @relation(name: "BarComments" onDelete: CASCADE)
    barChanges: [BarChange!] @relation(name: "BarChanges" onDelete: CASCADE)
    beerList: BeerList! @relation(link: TABLE, name: "BeerList" onDelete: CASCADE)
    createdBy: User @relation(name: "BarCreatedRelation")
    likedBy: [User!] @relation(name: "BarLikedRelation")
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}

type BarRating {
    id: ID! @id
    rating: Float!
    user: User
    bar: Bar! @relation(name: "BarRatings")
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}

type BarComment {
    id: ID! @id
    comment: String!
    bar: Bar! @relation(name: "BarComments")
    user: User
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}

type BarChange {
    id: ID! @id
    name: String
    address: String
    # TODO limit lat long by prague
    lat: String
    long: String
    phone: String
    openTime: DateTime
    closeTime: DateTime
    checked: Boolean @default(value: false)
    accepted: Boolean @default(value: false)
    bar: Bar! @relation(name: "BarChanges")
    beerList: BeerList
    user: User
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}
