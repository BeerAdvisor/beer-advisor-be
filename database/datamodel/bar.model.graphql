type Bar {
    id: ID! @unique
    name: String!
    address: String!
    # TODO limit lat long by prague
    lat: String!
    long: String!
    phone: String
    openTime: DateTime
    closeTime: DateTime
    photos: [String!]
    barRating: [BarRating!] @relation(name: "BarRatings" onDelete: CASCADE)
    barComments: [BarComment!] @relation(name: "BarComments" onDelete: CASCADE)
    barChanges: [BarChange!] @relation(name: "BarChanges" onDelete: CASCADE)
    # TODO change to beerList
    beerPrices: [BeerPrice!] @relation(name: "BarBeerPrices" onDelete: CASCADE)
    beerConnections: [BeerBarConnectionChange!] @relation(name: "BarBeerConnections" onDelete: CASCADE)
    createdBy: User @relation(name: "BarCreatedRelation")
    likedBy: [User!] @relation(name: "BarLikedRelation")
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BarRating {
    id: ID! @unique
    rating: Float!
    user: User
    bar: Bar! @relation(name: "BarRatings")
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BarComment {
    id: ID! @unique
    comment: String!
    bar: Bar! @relation(name: "BarComments")
    user: User
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BarChange {
    id: ID! @unique
    name: String
    address: String
    # TODO limit lat long by prague
    lat: String
    long: String
    phone: String
    openTime: DateTime
    closeTime: DateTime
    checked: Boolean @default(value: "false")
    accepted: Boolean @default(value: "false")
    bar: Bar! @relation(name: "BarChanges")
    # TODO change to beerList
    beerPrices: [BeerPrice!]
    beerConnections: [BeerBarConnectionChange!]
    user: User
    createdAt: DateTime!
    updatedAt: DateTime!
}
