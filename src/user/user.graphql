type Mutation {
    signup(signUpInput: SignUpInput): AuthPayload
    login(loginInput: LoginInput): AuthPayload
}

type AuthPayload {
    user: User
}

type User {
    id: ID!
    email: String!
    role: Role!
    active: Boolean!
    nickname: String!
    birthdate: DateTime!
    sex: Sex!
    name: String
    surname: String
    beerComments: [BeerComment!]
    barComments: [BarComment!]
    beerRatings: [BeerRating!]
    barRatings: [BarRating!]
    beerChanges: [BeerChange!]
    barChanges: [BarChange!]
    beerChangeUpvotes: [BeerChangeUpvote!]
    barChangeUpvotes: [BarChangeUpvote!]
    pricedBeers: [BeerPrice!]
    likedBeers: [Beer!]
    likedBars: [Bar!]
    createdBeers: [Beer!]
    createdBars: [Bar!]
    createdAt: DateTime!
}

enum Role {
    USER
    ADMIN
}

enum Sex {
    MALE
    FEMALE
}

input SignUpInput {
    email: String!
    password: String!
    nickname: String!
    sex: Sex!
    birthdate: DateTime!
}

input LoginInput {
    email: String!
    password: String!
}
