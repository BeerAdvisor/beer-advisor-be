type Query {
    bars: [Bar!]
    bar(id: ID!): Bar!
    findBars(findBarInput: FindBarInput): [Bar!]
}

type Mutation {
    createBar(createBarInput: CreateBarInput): Bar!
    commentBar(commentBarInput: CommentBarInput): BarComment!
    rateBar(rateBarInput: RateBarInput): Bar!
    changeBar(changeBarInput: ChangeBarInput): BarChange!
}

type Bar {
    id: ID!
    name: String!
    address: String!
    # TODO limit lat long by prague
    lat: String!
    long: String!
    phone: String
    openTime: DateTime
    closeTime: DateTime
    photos: [String!]
    avgRating: Float
    barRating: [BarRating!]
    barComments: [BarComment!]
    barChanges: [BarChange!]
    beerList: BeerList!
    createdBy: User
    likedBy: [User!]
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BarRating {
    id: ID!
    rating: Float!
    user: User
    bar: Bar!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BarComment {
    id: ID!
    comment: String!
    bar: Bar!
    user: User
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BarChange {
    id: ID!
    name: String
    address: String
    # TODO limit lat long by prague
    lat: String
    long: String
    phone: String
    openTime: DateTime
    closeTime: DateTime
    checked: Boolean
    accepted: Boolean
    bar: Bar!
    beerList: BeerList!
    user: User
    createdAt: DateTime!
    updatedAt: DateTime!
}

input CreateBarInput {
    name: String!
    lat: String!
    long: String!
    address: String
    openTime: DateTime
    closeTime: DateTime
    phone: String
    photos: [String!]
    beers: [BeerListItemInput!]
}

input BeerListItemInput {
    beerId: String!
    price: Float
}

input CommentBarInput {
    barId: ID!
    comment: String!
}

input RateBarInput {
    barId: ID!
    rating: Int!
}

input ChangeBarInput {
    name: String
    lat: String
    long: String
    address: String
    openTime: DateTime
    closeTime: DateTime
    phone: String
    photos: [String!]
    beers: [BeerListItemInput!]
}

input FindBarInput {
    # TODO Add beer search
    name: String
    openNow: Boolean
    distance: DistanceSearch
}

input DistanceSearch {
    # TODO limit lat long by prague
    lat: String!
    long: String!
    distance: Int!
}
