type Query {
    beers: [Beer!]
    beer(id: ID!): Beer!
    findBeers(findBeerInput: FindBeerInput): [Beer!]
}

type Mutation {
    createBeer(createBeerInput: CreateBeerInput): Beer!
    commentBeer(commentBeerInput: CommentBeerInput): BeerComment!
    rateBeer(rateBeerInput: RateBeerInput): Beer!
    changeBeer(changeBeerInput: ChangeBeerInput): BeerChange!
    attachBeer(attachBeerInput: AttachBeerInput): Bar!
}

type Beer {
    id: ID!
    name: String!
    strong: String
    photo: String
    avgRating: Float
    brewery: Brewery
    type: BeerType
    beerRating: [BeerRating!]
    beerComments: [BeerComment!]
    beerChanges: [BeerChange!]
    includedIn: [BeerListItem!]
    createdBy: User
    likedBy: [User!]
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BeerRating {
    id: ID!
    rating: Int!
    user: User
    beer: Beer!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BeerComment {
    id: ID!
    comment: String!
    beer: Beer!
    user: User
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BeerChange {
    id: ID!
    name: String
    strong: String
    photo: String
    brewery: Brewery
    type: BeerType
    checked: Boolean
    accepted: Boolean
    beer: Beer!
    user: User
    createdAt: DateTime!
    updatedAt: DateTime!
}

input RateBeerInput {
    beerId: ID!
    rating: Int!
}

input CreateBeerInput {
    name: String!
    strong: String
    photo: String
    breweryId: String
    typeId: String
    includeIn: [IncludeInInput!]
}

input IncludeInInput {
    barId: String!
    price: Float
}

input CommentBeerInput {
    beerId: ID!
    comment: String!
}

input ChangeBeerInput {
    beerId: String!
    name: String
    strong: String
    photo: String
    breweryId: String
    typeId: String
    includeIn: [IncludeInInput!]
}

input FindBeerInput {
    # TODO add bar search
    name: String
    type: String
    strong: String
    brewery: String
    maxPrice: Float
    minPrice: Float
}

input AttachBeerInput {
    beerId: String!
    barId: String!
    price: Float!
}
