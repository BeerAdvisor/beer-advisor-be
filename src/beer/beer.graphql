type Query {
    beers: [Beer!]
    beer(id: ID!): Beer!
    findBeers(findBeerInput: FindBeerInput): [Beer!]
}

type Mutation {
    createBeer(createBeerInput: CreateBeerInput): Beer!
    commentBeer(commentBeerInput: CommentBeerInput): BeerComment!
    rateBeer(rateBeerInput: RateBeerInput): Beer!
    changeBeer(changeBeerInput: ChangeBeerInput): BeerChange!
    upvoteBeerChange(upvoteBeerChangeInput: UpvoteBeerChangeInput): UpvoteBeerChangeUnion
}

type Beer {
    id: ID!
    name: String!
    strong: String
    photo: String
    avgRating: Float
    brewery: Brewery
    type: BeerType
    bars: [Bar!]
    beerRating: [BeerRating!]
    beerComments: [BeerComment!]
    beerChanges: [BeerChange!]
    beerPrices: [BeerPrice!]
    barConnections: [BeerBarConnectionChange!]
    createdBy: User
    likedBy: [User!]
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BeerRating {
    id: ID!
    rating: Int!
    user: User
    beer: Beer!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BeerComment {
    id: ID!
    comment: String!
    beer: Beer!
    user: User
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BeerChange {
    id: ID!
    field: BeerField!
    newValue: String!
    user: User
    beer: Beer!
    upvotes: [BeerChangeUpvote!]
    createdAt: DateTime!
    updatedAt: DateTime!
}

type BeerChangeUpvote {
    id: ID!
    user: User
    beerChange: BeerChange!
    createdAt: DateTime!
}

enum BeerField {
    NAME
    TYPE
    STRONG
    PHOTO
    BREWERY
}

input RateBeerInput {
    beerId: ID!
    rating: Int!
}

input CreateBeerInput {
    name: String!
    photo: String
    strong: String
    breweryId: String
    typeId: String
    barIds: [String!]
}

input CommentBeerInput {
    beerId: ID!
    comment: String!
}

input ChangeBeerInput {
    field: BeerField!
    newValue: String!
    beerId: String!
}

input UpvoteBeerChangeInput {
    beerChangeId: ID!
}

input FindBeerInput {
    # TODO add bar search
    name: String
    type: String
    strong: String
    brewery: String
}

union UpvoteBeerChangeUnion = BeerChangeUpvote | Beer
